#ifndef MORSECODE_H
#define MORSECODE_H

#include "CodedChar.h"

namespace Morse{
	class MorseCode
	{
	public:
		MorseCode();
		~MorseCode();
		void SendWord(char* word, void(*duringOn)(), void(*duringOff)());
		void setDotTime(int toSet);
		void setResetCheck(bool(*toSet)());

		static void delayWithCheck(int milliseconds, bool(*resetCheck)());


	private:
		int dotTime;
		int dashTime;

		CodedChar GetCharacter(char toGet);
		bool(*resetCheck)();

		const CodedChar MORSE_VALUES[36] {
			{'A',2,{CODE_SHORT,CODE_LONG}},
			{'B',4,{CODE_LONG,CODE_SHORT,CODE_SHORT,CODE_SHORT}},
			{'C',4,{CODE_LONG,CODE_SHORT,CODE_LONG,CODE_SHORT}},
			{'D',3,{CODE_LONG,CODE_SHORT,CODE_SHORT}},
			{'E',1,{CODE_SHORT}},
			{'F',4,{CODE_SHORT,CODE_SHORT,CODE_LONG,CODE_SHORT}},
			{'G',3,{CODE_LONG,CODE_LONG,CODE_SHORT}},
			{'H',4,{CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_SHORT}},
			{'I',2,{CODE_SHORT,CODE_SHORT}},
			{'J',4,{CODE_SHORT,CODE_LONG,CODE_LONG,CODE_LONG}},
			{'K',3,{CODE_LONG,CODE_SHORT,CODE_LONG}},
			{'L',4,{CODE_SHORT,CODE_LONG,CODE_SHORT,CODE_SHORT}},
			{'M',2,{CODE_LONG,CODE_LONG}},
			{'N',2,{CODE_LONG,CODE_SHORT}},
			{'O',3,{CODE_LONG,CODE_LONG,CODE_LONG}},
			{'P',4,{CODE_SHORT,CODE_LONG,CODE_LONG,CODE_SHORT}},
			{'Q',4,{CODE_LONG,CODE_LONG,CODE_SHORT,CODE_LONG}},
			{'R',3,{CODE_SHORT,CODE_LONG,CODE_SHORT}},
			{'S',3,{CODE_SHORT,CODE_SHORT,CODE_SHORT}},
			{'T',1,{CODE_LONG}},
			{'U',3,{CODE_SHORT,CODE_SHORT,CODE_LONG}},
			{'V',4,{CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_LONG}},
			{'W',3,{CODE_SHORT,CODE_LONG,CODE_LONG}},
			{'X',4,{CODE_LONG,CODE_SHORT,CODE_SHORT,CODE_LONG}},
			{'Y',4,{CODE_LONG,CODE_SHORT,CODE_LONG,CODE_LONG}},
			{'Z',4,{CODE_LONG,CODE_LONG,CODE_SHORT,CODE_SHORT}},
			{'0',5,{CODE_LONG,CODE_LONG,CODE_LONG,CODE_LONG,CODE_LONG}},
			{'1',5,{CODE_SHORT,CODE_LONG,CODE_LONG,CODE_LONG,CODE_LONG}},
			{'2',5,{CODE_SHORT,CODE_SHORT,CODE_LONG,CODE_LONG,CODE_LONG}},
			{'3',5,{CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_LONG,CODE_LONG}},
			{'4',5,{CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_LONG}},
			{'5',5,{CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_SHORT}},
			{'6',5,{CODE_LONG,CODE_SHORT,CODE_SHORT,CODE_SHORT,CODE_SHORT}},
			{'7',5,{CODE_LONG,CODE_LONG,CODE_SHORT,CODE_SHORT,CODE_SHORT}},
			{'8',5,{CODE_LONG,CODE_LONG,CODE_LONG,CODE_SHORT,CODE_SHORT}},
			{'9',5,{CODE_LONG,CODE_LONG,CODE_LONG,CODE_LONG,CODE_SHORT}}
		};

	};
}

#endif
